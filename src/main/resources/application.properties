#
# Profile config
spring.profiles.active=${ACTIVE_PROFILE:dev}
#
# Connection config
server.port=${SERVER_PORT:8081}
#
# SQL Datasource configuration
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/mapfood}
spring.datasource.username=${DATASOURCE_USERNAME:postgres}
spring.datasource.password=${DATASOURCE_PASSWORD:1234}
#
# MongoDB Datasource configuration
spring.data.mongodb.database=mapfood
#
# Hibernate specific configs
#
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
#
# Postgres bugfix see: https://pt.stackoverflow.com/questions/280034/erro-java-sql-sqlfeaturenotsupportedexception-m%C3%A9todo-org-postgresql-jdbc-pgconn
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#
# Configurações relativas a API e o funcionamento do serviço.
# TODO: é uma boa criar uma classe pra mapear essas configs.
# API key do Google Services
integration.google-api.secret-key=${GOOGLE_API_KEY:secret_key}
#
# Tempo de preparo em minutos do pedido
mapfood.valores.tempo-preparo=10
#
# Consumo da motocicleta km/l
mapfood.valores.consumo-motocicleta=42
#
# Distância máxima de entrega do estabelecimento (em KM)
mapfood.valores.limite-distancia-entrega=20
#
# Distância limite de pesquisa por um motoboy para o estabelecimento (em KM)
mapfood.valores.limite-distancia-motoboy=25